{"version":3,"sources":["components/Input/Typeahead.tsx","components/Modal/ModalTaoMoiBaoCao.tsx","containers/BaoCaoLamViec/index.tsx"],"names":["CARET_STYLES","position","right","top","Typeahead","props","style","className","children","ModalTaoMoiBaoCao","setValueFunction","t","useTranslation","dispatch","useDispatch","onHide","onSuccessCreated","visible","modalTitle","item","useState","note","setNote","user","setUser","listUser","setListUser","query","setQuery","useEffect","get","defaultTitle","id","label","searchUser","data","Modal","isOpen","ModalHeader","toggle","ModalBody","FormGroup","Label","onChange","items","onInputChange","input","options","map","selected","placeholder","Input","value","event","currentTarget","handleChangeTextboxValue","type","ModalFooter","Button","color","onClick","e","preventDefault","payloadCreate","title","idUser","updateReport","idReport","toast","createReport","thisId","BaoCaoLamViec","params","qs","parse","pageNumberUrl","pageitemsUrl","setData","totalPage","setTotalPage","toNumber","pageNumber","setPageNumber","pageSize","setPageSize","showModalTaoMoi","setShowModalTaoMoi","currentRow","setCurrentRow","getAllReport","list","length","total_pages","handleRedirectDetail","push","generatePath","routesMap","THONG_TIN_BAO_CAO","idBaoCao","handleEditClick","row","toggleModalTaoMoi","columns","useMemo","Header","accessor","Cell","Row","DataTable","disableOnClickCellEnd","onRowClick","Pagination","pageRangeDisplayed","marginPagesDisplayed","pageCount","onThisPaginationChange","selectedItem","url","replaceUrlParam","window","location","pathname","search","replace","pushSearchConditionToUrl"],"mappings":"2VAGMA,EAA8B,CAClCC,SAAU,WACVC,MAAO,MACPC,IAAK,QAcQC,EAPG,SAACC,GAAD,OAChB,kBAAC,YAAkBA,EACjB,0BAAMC,MAAON,EAAcO,UAAU,qBACpCF,EAAMG,WCqLIC,EAhL4B,SAACJ,GAA+B,IAiInCK,EAhI5BC,EAAMC,cAAND,EACFE,EAAWC,cACTC,EAAwDV,EAAxDU,OAAQC,EAAgDX,EAAhDW,iBAAkBC,EAA8BZ,EAA9BY,QAASC,EAAqBb,EAArBa,WAAYC,EAASd,EAATc,KAHe,EAK9CC,mBAAiB,IAL6B,mBAK/DC,EAL+D,KAKzDC,EALyD,OAM9CF,mBAAc,IANgC,mBAM/DG,EAN+D,KAMzDC,EANyD,OAOtCJ,mBAAc,IAPwB,mBAO/DK,EAP+D,KAOrDC,EAPqD,OAQ5CN,mBAAiB,IAR2B,mBAQ/DO,EAR+D,KAQxDC,EARwD,KA2ItE,OAjIAC,qBAAU,WACN,GAAGC,cAAIX,EAAM,eAAe,CACxB,IAAMY,EAAeD,cAAIX,EAAM,kBAC/BG,EAAQS,GACRP,EAAQ,CAAC,CACLQ,GAAIF,cAAIX,EAAM,mBACdc,MAAOH,cAAIX,EAAM,6BAGrBK,EAAQ,IACRF,EAAQ,MAGb,CAACH,IAEJU,qBAAU,WACQ,KAAVF,GACAd,EACIqB,YACI,CAAEP,MAAOA,IACT,SAACQ,GACGT,EAAYS,MAEhB,kBAIb,CAACR,IAuGA,kBAACS,EAAA,EAAD,CAAOC,OAAQpB,EAASV,UAAU,0BAC9B,kBAAC+B,EAAA,EAAD,CAAaC,OAAQxB,GAASG,GAC9B,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAQ/B,EAAE,8BACV,kBAAC,EAAD,CACIqB,GAAG,iBACHW,SAZpB,SAA0BC,GACtBpB,EAAQoB,IAYQC,eAnBgBnC,EAmB0BkB,EAlBnD,SAACkB,GACJpC,EAAiBoC,KAkBLC,QAASC,cAAIvB,GAAU,SAAAN,GAAI,MAAK,CAC5Ba,GAAIF,cAAIX,EAAM,MACdc,MAAOH,cAAIX,EAAM,gBAErB8B,SAAU1B,EACV2B,YAAavC,EAAE,6CAGvB,kBAAC8B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAQ/B,EAAE,yBACV,kBAACwC,EAAA,EAAD,CACIC,MAAO/B,EACPsB,SAtCpB,SAAkCjC,GAC9B,OAAO,SAAC2C,GACJ3C,EAAiB2C,EAAMC,cAAcF,QAoCfG,CAAyBjC,GACnCkC,KAAK,WACLN,YAAavC,EAAE,sCAI3B,kBAAC8C,EAAA,EAAD,CAAalD,UAAU,uBACnB,kBAACmD,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAjIpC,SAAsBC,GAElB,GADAA,EAAEC,iBACW,KAATzC,GAAwB,OAATA,GAAkBS,cAAIP,EAAM,QAA/C,CAYA,IAAMwC,EAAgB,CAClBC,MAAO3C,EACP4C,OAAQnC,cAAIP,EAAM,SAGlBO,cAAIX,EAAM,eAgCVN,EACIqD,YAAa,2BAAIH,GAAL,IAAoBI,SAAUrC,cAAIX,EAAM,kBAChD,SAACgB,GACGnB,IAEAoD,YACI,oCACI,uBAAG7D,UAAU,4BACZI,EAAE,oCAFP,IAE6BA,EAAE,qBAE/B,CACI6C,KAAM,eAKlB,WACIY,YACI,oCACI,uBAAG7D,UAAU,4BACZI,EAAE,2CAEP,CACI6C,KAAM,cAtD1B3C,EACIwD,YAAaN,GACT,SAAC5B,GACGnB,IACA,IAAMsD,EAASxC,cAAIK,EAAM,8BAA+B,IACxDiC,YACI,oCACI,uBAAG7D,UAAU,4BACZI,EAAE,0BAFP,IAEwB2D,EAFxB,IAEiC3D,EAAE,qBAEnC,CACI6C,KAAM,eAKlB,WACIY,YACI,oCACI,uBAAG7D,UAAU,4BACZI,EAAE,2CAEP,CACI6C,KAAM,mBAxC1BY,YACI,oCACI,uBAAG7D,UAAU,4BACZI,EAAE,2FAEP,CACI6C,KAAM,YAyHL7C,EAAE,oBC6BR4D,UAlMwB,SAAClE,GACtC,IAAMQ,EAAWC,cAEX0D,EAASC,IAAGC,MAAM5C,cAAIzB,EAAO,oBAC7BsE,EAAgB7C,cAAI0C,EAAO,cAC3BI,EAAe9C,cAAI0C,EAAO,aALoC,EAM5CpD,mBAAc,IAN8B,mBAM7De,EAN6D,KAMvD0C,EANuD,OAOlCzD,mBAAiB,GAPiB,mBAO7D0D,EAP6D,KAOlDC,EAPkD,OAQhC3D,mBAAiBuD,EAAgBK,mBAASL,GAAiB,GAR3B,mBAQ7DM,EAR6D,KAQjDC,EARiD,OASpC9D,mBAAiBwD,EAAeI,mBAASJ,GAAgB,IATrB,mBAS7DO,EAT6D,KASnDC,EATmD,OAWtBhE,oBAAkB,GAXI,mBAW7DiE,EAX6D,KAW5CC,EAX4C,OAYhClE,mBAAc,IAZkB,mBAY7DmE,EAZ6D,KAYjDC,EAZiD,KAapE3D,qBAAU,WACRhB,EACE4E,YAAa,CACXR,WAAYA,EACZE,SAAUA,IAEV,SAAChD,GACIA,EAAKuD,KAAKC,QAAU,IACrBd,EAAQ1C,EAAKuD,MACbX,EAAaC,mBAAS7C,EAAKyD,kBAG/B,kBAIH,CAACX,EAAWE,IAEf,IAOMU,EAAuB,SAAC1E,GAC5BN,EACEiF,YACEC,YAAaC,IAAUC,kBAAmB,CACxCC,SAAU/E,EAAKa,QAMvB,SAASmE,EACPC,GAEA,OAAO,WACLZ,EAAcY,GACdC,KAIJ,IAKMC,EAAUC,mBAEd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,uBACRC,SAAU,SAEZ,CACED,OAAQ,iBACRC,SAAU,YAEZ,CACED,OAAQ,qBACRC,SAAU,GACVC,KAAM,gBAAGN,EAAH,EAAGA,IAAH,OACJ,kBAAC1C,EAAA,EAAD,CAAQnD,UAAU,OAAOoD,MAAM,UAC7BC,QAASuC,EAAgBC,IAEzB,uBAAG7F,UAAU,sBACV,iBAMX,IAGI8F,EAAoB,YACD,IAApBhB,GAA0BG,EAAc,IAC3CF,GAAoBD,IA4BtB,OACE,oCACE,kBAACsB,EAAA,EAAD,CAAKpG,UAAU,0BACb,wBAAIA,UAAU,YAAY,sCAmB1B,yBAAKA,UAAU,sBACb,kBAACmD,EAAA,EAAD,CAAQnD,UAAU,OAAOoD,MAAM,UAC7BC,QAASyC,GAEX,uBAAG9F,UAAU,sBACV,sBAYP,wBAAIA,UAAU,YAAY,oCA5C1B,kBAACoG,EAAA,EAAD,CAAKpG,UAAU,0CACb,kBAACqG,EAAA,EAAD,CAAWC,uBAAuB,EAAMP,QAASA,EAASnE,KAAMA,EAAM2E,WAAYjB,KA6CpF,kBAACkB,EAAA,EAAD,CACEC,mBAAoB,EACpBC,qBAAsB,EACtBC,UAAWpC,EACXqC,uBAhHqB,SAACC,GAC1BlC,EAAckC,EAAanE,SAAS,GA3BL,SAACgC,GAChC,IAAMoC,EAAMC,YAAgBC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAAQ,CAC7EzC,WAAYA,IAEdpE,EAAS8G,YAAQ5B,YAAasB,KAwB9BO,CAAyBR,EAAanE,SAAS,IA+G3CmC,YAAaA,IAEf,kBAAC,EAAD,CACEnE,QAASoE,EACTrE,iBA3EgB,WACpBH,EACE4E,YAAa,CACXR,WAAYA,EACZE,SAAUA,IAEV,SAAChD,GACIA,EAAKuD,KAAKC,QAAU,IACrBd,EAAQ1C,EAAKuD,MACbX,EAAaC,mBAAS7C,EAAKyD,kBAG/B,gBAGJS,KA6DItF,OAAQsF,EACRnF,WAAY,yBACZC,KAAMoE","file":"static/js/2.4c5a9fbc.chunk.js","sourcesContent":["import React, { CSSProperties } from 'react';\nimport { Typeahead as RootTypeahead, TypeaheadProps } from 'react-bootstrap-typeahead';\n\nconst CARET_STYLES: CSSProperties = {\n  position: 'absolute',\n  right: '8px',\n  top: '12px',\n};\n\ninterface Props {\n  children?: JSX.Element;\n}\n\nconst Typeahead = (props: Props & TypeaheadProps<TypeaheadOption>): JSX.Element => (\n  <RootTypeahead {...props}>\n    <span style={CARET_STYLES} className=\"fa fa-caret-down\" />\n    {props.children}\n  </RootTypeahead>\n);\n\nexport default Typeahead;\n","import React, { FormEvent, useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody, FormGroup, Label, Input } from 'reactstrap';\nimport { get, map } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n// import { makeSelectorGet_MT_ZTMI045_OUT } from 'redux/MIOA_ZTMI045/selectors';\n// import { action_MIOA_ZTMI016 } from 'redux/MIOA_ZTMI016/actions';\n// import { makeSelectorBPOrg } from 'redux/GetProfileByUsername/selectors';\nimport { toast } from 'react-toastify';\nimport { createReport, searchUser, updateReport } from '../../redux/BaoCaoLamViec/action';\nimport Typeahead from '../Input/Typeahead';\n\ninterface Props {\n    onHide: () => void;\n    onSuccessCreated: () => void;\n    visible: boolean;\n    modalTitle: string;\n    item?: any;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst ModalTaoMoiBaoCao: React.FC<Props> = (props: Props): JSX.Element => {\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { onHide, onSuccessCreated, visible, modalTitle, item } = props;\n\n    const [note, setNote] = useState<string>('');\n    const [user, setUser] = useState<any>([]);\n    const [listUser, setListUser] = useState<any>([]);\n    const [query, setQuery] = useState<string>('');\n\n    useEffect((): void => {\n        if(get(item, 'original.id')){\n            const defaultTitle = get(item, 'original.title');\n            setNote(defaultTitle)\n            setUser([{\n                id: get(item, 'original.idUser'),\n                label: get(item, 'original.fullName'),\n            }])\n        } else {\n            setUser([])\n            setNote('')\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [item]);\n\n    useEffect((): void => {\n        if (query !== '')\n            dispatch(\n                searchUser(\n                    { query: query },\n                    (data: any) => {\n                        setListUser(data)\n                    },\n                    () => { }\n                )\n            )\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [query]);\n\n    function handleCreate(e: FormEvent): void {\n        e.preventDefault();        \n        if (note === '' || note === null || !get(user, '0.id')) {\n            toast(\n                <>\n                    <i className=\"fa fa-window-close mr-2\" />\n                    {t('Chưa chọn nhân viên hoặc chưa nhập tiêu đề')}\n                </>,\n                {\n                    type: 'error',\n                },\n            );\n            return\n        }\n        const payloadCreate = {\n            title: note,\n            idUser: get(user, '0.id')\n        };\n\n        if(!get(item, 'original.id')){\n            dispatch(\n                createReport(payloadCreate,\n                    (data: any): void => {\n                        onSuccessCreated();\n                        const thisId = get(data, 'MT_ZTMI016_OUT.IV_TOR_ID_CU', '');\n                        toast(\n                            <>\n                                <i className=\"fa fa-check-square mr-2\" />\n                                {t('Tạo báo cáo')} {thisId} {t('thành công')}\n                            </>,\n                            {\n                                type: 'success',\n                            },\n                        );\n                        // alert(`Tạo thành công! Mã: ${thisId}`);\n                    },\n                    (): void => {\n                        toast(\n                            <>\n                                <i className=\"fa fa-window-close mr-2\" />\n                                {t('Đã có lỗi xảy ra ')}\n                            </>,\n                            {\n                                type: 'error',\n                            },\n                        );\n                        // alert(t('Có lỗi xảy ra!'));\n                    },\n                ),\n            );\n        } else {\n            dispatch(\n                updateReport({...payloadCreate, idReport: get(item, 'original.id')},\n                    (data: any): void => {\n                        onSuccessCreated();\n                        // const thisId = get(data, 'MT_ZTMI016_OUT.IV_TOR_ID_CU', '');\n                        toast(\n                            <>\n                                <i className=\"fa fa-check-square mr-2\" />\n                                {t('Cập nhật báo cáo')} {t('thành công')}\n                            </>,\n                            {\n                                type: 'success',\n                            },\n                        );\n                        // alert(`Tạo thành công! Mã: ${thisId}`);\n                    },\n                    (): void => {\n                        toast(\n                            <>\n                                <i className=\"fa fa-window-close mr-2\" />\n                                {t('Đã có lỗi xảy ra ')}\n                            </>,\n                            {\n                                type: 'error',\n                            },\n                        );\n                        // alert(t('Có lỗi xảy ra!'));\n                    },\n                ),\n            );\n        }\n    }\n\n    function handleChangeTextboxValue(setValueFunction: Function): (event: React.FormEvent<HTMLInputElement>) => void {\n        return (event: React.FormEvent<HTMLInputElement>): void => {\n            setValueFunction(event.currentTarget.value);\n        };\n    }\n\n    function handleChangeTypeaheadInput(setValueFunction: Function) {\n        return (input: string): void => {\n            setValueFunction(input);\n        };\n    }\n\n    function handleChooseUser(items: TypeaheadOption[]): void {\n        setUser(items)\n    }\n\n    return (\n        <Modal isOpen={visible} className=\"sipTitleModalCreateNew\">\n            <ModalHeader toggle={onHide}>{modalTitle}</ModalHeader>\n            <ModalBody>\n                <FormGroup>\n                    <Label>{t('Chọn nhân viên')}</Label>\n                    <Typeahead\n                        id=\"locationSender\"\n                        onChange={handleChooseUser}\n                        onInputChange={handleChangeTypeaheadInput(setQuery)}\n                        options={map(listUser, item => ({\n                            id: get(item, 'id'),\n                            label: get(item, 'fullName'),\n                        }))}\n                        selected={user}\n                        placeholder={t('Nhập thông tin nhân viên')}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Label>{t('Tiêu đề')}</Label>\n                    <Input\n                        value={note}\n                        onChange={handleChangeTextboxValue(setNote)}\n                        type=\"textarea\"\n                        placeholder={t('Nhập tiêu đề')}\n                    />\n                </FormGroup>\n            </ModalBody>\n            <ModalFooter className=\"justify-content-end\">\n                <Button color=\"primary\" onClick={handleCreate}>\n                    {t('Ghi lại')}\n                </Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default ModalTaoMoiBaoCao;\n","/* eslint-disable max-lines */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Row } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, match } from 'react-router-dom';\n// import { Cell } from 'react-table';\nimport { push, replace } from 'connected-react-router';\nimport { get, toNumber} from 'lodash';\nimport qs from 'query-string';\n\nimport DataTable from '../../components/DataTable';\n// import { numberFormat } from '../../utils/common';\nimport { getAllReport } from '../../redux/BaoCaoLamViec/action';\n// import parse_query_string from '../../utils/parse_query_string';\nimport routesMap from '../../utils/routesMap';\nimport Pagination from '../../components/Pagination';\nimport replaceUrlParam from '../../utils/replaceUrlParam';\nimport ModalTaoMoiBaoCao from '../../components/Modal/ModalTaoMoiBaoCao';\n// eslint-disable-next-line import/imports-first\n\ninterface Props {\n  match: match;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst BaoCaoLamViec: React.FC<Props> = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  // const totalPage = 3;\n  const params = qs.parse(get(props, 'location.search'));\n  const pageNumberUrl = get(params,\"pageNumber\");\n  const pageitemsUrl = get(params,\"pageitems\");\n  const [data, setData] = useState<any>([]);\n  const [totalPage, setTotalPage] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(pageNumberUrl ? toNumber(pageNumberUrl) : 1);\n  const [pageSize, setPageSize] = useState<number>(pageitemsUrl ? toNumber(pageitemsUrl) : 20);\n  // const idDonHang = get(props, 'match.params.idDonHang');\n  const [showModalTaoMoi, setShowModalTaoMoi] = useState<boolean>(false);\n  const [currentRow, setCurrentRow] = useState<any>({});\n  useEffect(() => {  \n    dispatch(\n      getAllReport({\n        pageNumber: pageNumber,\n        pageSize: pageSize\n      },\n        (data: any) => {\n          if(data.list.length >= 0){\n            setData(data.list)\n            setTotalPage(toNumber(data.total_pages))\n          }\n        },\n        () => {}\n      )\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageNumber,pageSize]);\n\n  const pushSearchConditionToUrl = (pageNumber: number): void => {\n    const url = replaceUrlParam(window.location.pathname + window.location.search, {\n      pageNumber: pageNumber,\n    });\n    dispatch(replace(generatePath(url)));\n  };\n\n  const handleRedirectDetail = (item: any): void => {\n    dispatch(\n      push(\n        generatePath(routesMap.THONG_TIN_BAO_CAO, {\n          idBaoCao: item.id,\n        }),\n      ),\n    );\n  };\n\n  function handleEditClick(\n    row: any,\n  ): (event: React.MouseEvent) => void {\n    return (): void => {\n      setCurrentRow(row)\n      toggleModalTaoMoi()\n    };\n  }\n\n  const onPaginationChange = (selectedItem: { selected: number }): void => {\n    setPageNumber(selectedItem.selected+1)\n    pushSearchConditionToUrl(selectedItem.selected+1);\n  };\n\n  const columns = useMemo(\n    // eslint-disable-next-line max-lines-per-function\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Tiêu đề',\n        accessor: 'title',\n      },\n      {\n        Header: 'Họ tên',\n        accessor: 'fullName',\n      },\n      {\n        Header: 'Quản trị',\n        accessor: '',\n        Cell: ({ row }: any): JSX.Element => (\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={handleEditClick(row)}\n          >\n            <i className=\"fa fa-pencil mr-2\" />\n              {'Sửa'}\n          </Button>\n        ),\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  const toggleModalTaoMoi = (): void => {\n    if(showModalTaoMoi === true) setCurrentRow({})\n    setShowModalTaoMoi(!showModalTaoMoi);\n  };\n\n  const getListBaoCao = (): void => {\n    dispatch(\n      getAllReport({\n        pageNumber: pageNumber,\n        pageSize: pageSize\n      },\n        (data: any) => {\n          if(data.list.length >= 0){\n            setData(data.list)\n            setTotalPage(toNumber(data.total_pages))\n          }\n        },\n        () => {}\n      )\n    )\n    toggleModalTaoMoi()\n  };\n\n  function renderTable(): JSX.Element {\n    return (\n      <Row className=\"sipTableContainer sipTableRowClickable\">\n        <DataTable disableOnClickCellEnd={true} columns={columns} data={data} onRowClick={handleRedirectDetail} />\n      </Row>\n    );\n  }\n  return (\n    <>\n      <Row className=\"mb-3 sipTitleContainer\">\n        <h1 className=\"sipTitle\">{'Thông tin đơn hàng'}</h1>\n        {/* <RootTypeahead\n          id=\"location\"\n          //  labelKey={labelKeyLocation}\n          options={listLocation}\n          placeholder=\"Chọn đơn vị\"\n        // onInputChange={setKeywords}\n        //  onChange={handleSelectedLocation}\n        //  selected={selectedLocation}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '10px',\n            }}\n            className=\"fa fa-caret-down\"\n          />\n        </RootTypeahead> */}\n        <div className=\"sipTitleRightBlock\">\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={toggleModalTaoMoi}\n          >\n          <i className=\"fa fa-pencil mr-2\" />\n            {'Thêm mới'}\n          </Button>\n          {/* <Button className=\"ml-2\" color=\"primary\" >\n            <i className=\"fa fa-pencil mr-2\" />\n            {'Sửa'}\n          </Button> */}\n          {/* <Button className=\"ml-2\" color=\"primary\">\n            <img src={'../../assets/img/icon/iconInBuuGui.svg'} alt=\"VTPostek\" />\n            {'In bưu gửi'}\n          </Button> */}\n        </div>\n      </Row>\n      <h1 className=\"sipTitle\">{'Danh sách phiếu gửi'}</h1>\n      {renderTable()}\n      <Pagination\n        pageRangeDisplayed={2}\n        marginPagesDisplayed={2}\n        pageCount={totalPage}\n        onThisPaginationChange={onPaginationChange}\n        setPageSize={setPageSize}\n      />\n      <ModalTaoMoiBaoCao \n        visible={showModalTaoMoi}\n        onSuccessCreated={getListBaoCao}\n        onHide={toggleModalTaoMoi}\n        modalTitle={'Tạo báo cáo'}\n        item={currentRow}\n      />\n    </>\n  // ) : (\n  //   <Fade in={true} timeout={1000}>\n  //     <Row className=\"mb-3 sipTitleContainer\">\n  //       {/* <h1 className=\"sipTitle\">\n  //         <ButtonGoBack />\n  //         {t('Quay lại')}\n  //       </h1> */}\n  //     </Row>\n  //     <div className=\"row mb-5\" />\n  //     <h3 className=\"text-center\">{'Không tìm thấy thông tin phiếu gửi!'}</h3>\n  //   </Fade>\n  );\n};\n\nexport default BaoCaoLamViec;\n"],"sourceRoot":""}