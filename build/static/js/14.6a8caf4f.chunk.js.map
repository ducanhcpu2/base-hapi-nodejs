{"version":3,"sources":["containers/Roles/index.tsx"],"names":["RolesScreen","props","dispatch","useDispatch","params","qs","parse","get","pageNumberUrl","pageitemsUrl","useState","totalPage","setTotalPage","data","setData","toNumber","pageNumber","setPageNumber","pageSize","setPageSize","useEffect","getAllRoles","list","length","total_pages","handleRedirectDetail","item","push","generatePath","routesMap","THONG_TIN_CHI_TIET_ROLE","idRole","id","handleEditClick","row","console","log","columns","useMemo","Header","accessor","Cell","className","color","onClick","disableOnClickCellEnd","onRowClick","pageRangeDisplayed","marginPagesDisplayed","pageCount","onThisPaginationChange","selectedItem","selected","url","replaceUrlParam","window","location","pathname","search","replace","pushSearchConditionToUrl"],"mappings":"0PAiLeA,UA1JsB,SAACC,GACpC,IAAMC,EAAWC,cACXC,EAASC,IAAGC,MAAMC,cAAIN,EAAO,oBAC7BO,EAAgBD,cAAIH,EAAO,cAC3BK,EAAeF,cAAIH,EAAO,aAJkC,EAKhCM,mBAAiB,GALe,mBAK3DC,EAL2D,KAKhDC,EALgD,OAM1CF,mBAAc,IAN4B,mBAM3DG,EAN2D,KAMrDC,EANqD,OAO9BJ,mBAAiBF,EAAgBO,mBAASP,GAAiB,GAP7B,mBAO3DQ,EAP2D,KAO/CC,EAP+C,OAQlCP,mBAAiBD,EAAeM,mBAASN,GAAgB,IARvB,mBAQ3DS,EAR2D,KAQjDC,EARiD,KAUlEC,qBAAU,WACRlB,EACImB,YAAY,CACRL,WAAYA,EACZE,SAAUA,IAEd,SAACL,GACMA,EAAKS,KAAKC,QAAU,IACnBT,EAAQD,EAAKS,MACbV,EAAaG,mBAASF,EAAKW,kBAGnC,kBAIH,IAEH,IAAMC,EAAuB,SAACC,GAC5BxB,EACEyB,YACEC,YAAaC,IAAUC,wBAAyB,CAC5CC,OAAQL,EAAKM,QAMvB,SAASC,EACPC,GAEA,OAAO,WACLC,QAAQC,IAAI,QAAQF,IAIxB,IAYMG,EAAUC,mBAEd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,oBACRC,SAAU,YAEZ,CACED,OAAQ,qBACRC,SAAU,GACVC,KAAM,gBAAGP,EAAH,EAAGA,IAAH,OACJ,kBAAC,IAAD,CAAQQ,UAAU,OAAOC,MAAM,UAC7BC,QAASX,EAAgBC,IAEzB,uBAAGQ,UAAU,sBACV,iBAMX,IAUF,OACE,oCACE,kBAAC,IAAD,CAAKA,UAAU,0BACb,wBAAIA,UAAU,YAAY,2BAmB1B,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAQA,UAAU,OAAOC,MAAM,WAC/B,uBAAGD,UAAU,sBACV,sBAYP,wBAAIA,UAAU,YAAY,2BA1C1B,kBAAC,IAAD,CAAKA,UAAU,0CACb,kBAAC,IAAD,CAAWG,uBAAuB,EAAMR,QAASA,EAASxB,KAAMA,EAAMiC,WAAYrB,KA2CpF,kBAAC,IAAD,CACEsB,mBAAoB,EACpBC,qBAAsB,EACtBC,UAAWtC,EACXuC,uBAnFqB,SAACC,GAC1BlC,EAAckC,EAAaC,SAAS,GARL,SAACpC,GAChC,IAAMqC,EAAMC,YAAgBC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAAQ,CAC7E1C,WAAYA,IAEdd,EAASyD,YAAQ/B,YAAayB,KAK9BO,CAAyBT,EAAaC,SAAS,IAkF3CjC,YAAaA","file":"static/js/14.6a8caf4f.chunk.js","sourcesContent":["/* eslint-disable max-lines */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Row } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, match } from 'react-router-dom';\n// import { Cell } from 'react-table';\nimport { push, replace } from 'connected-react-router';\nimport { get, toNumber} from 'lodash';\nimport qs from 'query-string';\nimport DataTable from '../../components/DataTable';\n// import { numberFormat } from '../../utils/common';\n// import parse_query_string from '../../utils/parse_query_string';\nimport routesMap from '../../utils/routesMap';\nimport { getAllRoles } from '../../redux/Roles/action';\nimport replaceUrlParam from '../../utils/replaceUrlParam';\nimport Pagination from '../../components/Pagination';\n// eslint-disable-next-line import/imports-first\n\ninterface Props {\n  match: match;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst RolesScreen: React.FC<Props> = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const params = qs.parse(get(props, 'location.search'));\n  const pageNumberUrl = get(params,\"pageNumber\");\n  const pageitemsUrl = get(params,\"pageitems\");\n  const [totalPage, setTotalPage] = useState<number>(1);\n  const [data, setData] = useState<any>([]);\n  const [pageNumber, setPageNumber] = useState<number>(pageNumberUrl ? toNumber(pageNumberUrl) : 1);\n  const [pageSize, setPageSize] = useState<number>(pageitemsUrl ? toNumber(pageitemsUrl) : 20);\n  // const idDonHang = get(props, 'match.params.idDonHang');\n  useEffect(() => {  \n    dispatch(\n        getAllRoles({\n            pageNumber: pageNumber,\n            pageSize: pageSize\n        },\n        (data: any) => {\n            if(data.list.length >= 0){\n                setData(data.list)\n                setTotalPage(toNumber(data.total_pages))\n            }\n        },\n        () => {}\n      )\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleRedirectDetail = (item: any): void => {\n    dispatch(\n      push(\n        generatePath(routesMap.THONG_TIN_CHI_TIET_ROLE, {\n            idRole: item.id,\n        }),\n      ),\n    );\n  };\n\n  function handleEditClick(\n    row: any,\n  ): (event: React.MouseEvent) => void {\n    return (): void => {\n      console.log(\"row: \",row);\n    };\n  }\n\n  const pushSearchConditionToUrl = (pageNumber: number): void => {\n    const url = replaceUrlParam(window.location.pathname + window.location.search, {\n      pageNumber: pageNumber,\n    });\n    dispatch(replace(generatePath(url)));\n  };\n\n  const onPaginationChange = (selectedItem: { selected: number }): void => {\n    setPageNumber(selectedItem.selected+1)\n    pushSearchConditionToUrl(selectedItem.selected+1);\n  };\n\n  const columns = useMemo(\n    // eslint-disable-next-line max-lines-per-function\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Tên quyền',\n        accessor: 'roleName',\n      },\n      {\n        Header: 'Quản trị',\n        accessor: '',\n        Cell: ({ row }: any): JSX.Element => (\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={handleEditClick(row)}\n          >\n            <i className=\"fa fa-pencil mr-2\" />\n              {'Sửa'}\n          </Button>\n        ),\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  function renderTable(): JSX.Element {\n    return (\n      <Row className=\"sipTableContainer sipTableRowClickable\">\n        <DataTable disableOnClickCellEnd={true} columns={columns} data={data} onRowClick={handleRedirectDetail} />\n      </Row>\n    );\n  }\n  return (\n    <>\n      <Row className=\"mb-3 sipTitleContainer\">\n        <h1 className=\"sipTitle\">{'Thông tin quyền'}</h1>\n        {/* <RootTypeahead\n          id=\"location\"\n          //  labelKey={labelKeyLocation}\n          options={listLocation}\n          placeholder=\"Chọn đơn vị\"\n        // onInputChange={setKeywords}\n        //  onChange={handleSelectedLocation}\n        //  selected={selectedLocation}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '10px',\n            }}\n            className=\"fa fa-caret-down\"\n          />\n        </RootTypeahead> */}\n        <div className=\"sipTitleRightBlock\">\n          <Button className=\"ml-2\" color=\"primary\" >\n          <i className=\"fa fa-pencil mr-2\" />\n            {'Thêm mới'}\n          </Button>\n          {/* <Button className=\"ml-2\" color=\"primary\" >\n            <i className=\"fa fa-pencil mr-2\" />\n            {'Sửa'}\n          </Button> */}\n          {/* <Button className=\"ml-2\" color=\"primary\">\n            <img src={'../../assets/img/icon/iconInBuuGui.svg'} alt=\"VTPostek\" />\n            {'In bưu gửi'}\n          </Button> */}\n        </div>\n      </Row>\n      <h1 className=\"sipTitle\">{'Danh sách quyền'}</h1>\n      {renderTable()}\n      <Pagination\n        pageRangeDisplayed={2}\n        marginPagesDisplayed={2}\n        pageCount={totalPage}\n        onThisPaginationChange={onPaginationChange}\n        setPageSize={setPageSize}\n      />\n    </>\n//   ) : (\n//     <Fade in={true} timeout={1000}>\n//       <Row className=\"mb-3 sipTitleContainer\">\n//         {/* <h1 className=\"sipTitle\">\n//           <ButtonGoBack />\n//           {t('Quay lại')}\n//         </h1> */}\n//       </Row>\n//       <div className=\"row mb-5\" />\n//       <h3 className=\"text-center\">{'Không tìm thấy thông tin phiếu gửi!'}</h3>\n//     </Fade>\n  );\n};\n\nexport default RolesScreen;\n"],"sourceRoot":""}