{"version":3,"sources":["components/DataTable/no-data.svg","components/DataTable/NoData.tsx","components/DataTable/index.tsx","containers/BaoCaoLamViec/index.tsx"],"names":["module","exports","NoData","Container","fluid","Row","className","alt","src","noData","DataTable","props","columns","data","onCheckedValuesChange","onRowCheck","onRowClick","showCheckAll","showCheckboxes","renderCheckboxValues","resetCheckbox","isString","isFunction","Error","useTable","getTableProps","headerGroups","rows","prepareRow","useState","checkedValues","setCheckedValues","useEffect","currentPageCheckboxValues","useMemo","map","currentPageYetCheckedValues","difference","isPageAllChecked","isEmpty","handleCheckAllRows","useCallback","newCheckedValues","concat","handleCheckRow","item","row","event","value","currentTarget","produce","draftState","includes","pull","handleClickRow","rowOriginal","renderCheckRow","get","getCheckboxValue","Label","check","Input","checked","onChange","type","Table","striped","hover","headerGroup","index","key","size","headers","column","getHeaderProps","render","getRowProps","cells","cell","onClick","getCellProps","defaultProps","noop","BaoCaoLamViec","dispatch","useDispatch","setData","idDonHang","getAllReport","handleRedirectDetail","push","generatePath","routesMap","THONG_TIN_BAO_CAO","idBaoCao","id","Header","accessor","Cell","to","target","title","color","in","timeout"],"mappings":"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","file":"static/js/1.4f0880c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-data.a7c6fab5.svg\";","import React from 'react';\nimport { Container, Row } from 'reactstrap';\nimport noData from './no-data.svg';\n\nconst NoData = (): JSX.Element => {\n\n  return (\n    <Container fluid>\n      <Row className=\"align-items-center flex-column mb-3\">\n        <img alt=\"no-data\" className=\"w-auto\" src={noData} />\n      </Row>\n      <Row className=\"align-items-center flex-column\">\n        <span className=\"text-bold text-uppercase\">{'Không tìm thấy dữ liệu'}</span>\n      </Row>\n    </Container>\n  );\n};\n\nexport default NoData;","import React, { useCallback, useMemo, useState, useEffect } from 'react';\nimport { Input, Label, Table } from 'reactstrap';\nimport { Row as TableRow, TableOptions, useTable } from 'react-table';\nimport { concat, difference, get, includes, isEmpty, isFunction, isString, map, noop, pull, size } from 'lodash';\nimport produce from 'immer';\n\nimport NoData from './NoData';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Props extends TableOptions<any> {\n  columns: any[];\n  onCheckedValuesChange?: (values: string[]) => void;\n  onRowCheck?: (value: string, item?: any, row?: TableRow<any>) => void;\n  onRowClick?: (rowData: any, row?: TableRow<any>) => void;\n  showCheckAll?: boolean;\n  showCheckboxes?: boolean;\n  renderCheckboxValues?: string | ((item: any) => string);\n  resetCheckbox?: boolean;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n// eslint-disable-next-line max-lines-per-function\nconst DataTable: React.FC<Props> = (props: Props): JSX.Element => {\n  const {\n    columns,\n    data,\n    onCheckedValuesChange,\n    onRowCheck,\n    onRowClick,\n    showCheckAll,\n    showCheckboxes,\n    renderCheckboxValues,\n    resetCheckbox,\n  } = props;\n\n  if (showCheckboxes === true && !isString(renderCheckboxValues) && !isFunction(renderCheckboxValues)) {\n    throw new Error('renderCheckboxValues is required if showCheckboxes is true.');\n  }\n\n  // Use the state and functions returned from useTable to build your UI\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable({ columns, data });\n\n  const [checkedValues, setCheckedValues] = useState<string[]>([]);\n\n  useEffect(() => {\n    setCheckedValues([]);\n  }, [resetCheckbox]);\n\n  const currentPageCheckboxValues = useMemo(() => {\n    if (isString(renderCheckboxValues)) return map(data, renderCheckboxValues);\n    if (isFunction(renderCheckboxValues)) return map(data, renderCheckboxValues);\n    return [];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const currentPageYetCheckedValues = useMemo(() => {\n    return difference(currentPageCheckboxValues, checkedValues);\n  }, [checkedValues, currentPageCheckboxValues]);\n\n  const isPageAllChecked = useMemo(() => isEmpty(currentPageYetCheckedValues), [currentPageYetCheckedValues]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const getCheckboxValue = (row: TableRow<any>): string => {\n    if (isString(renderCheckboxValues)) {\n      return get(row, `original.${renderCheckboxValues}`) || '';\n    } else if (isFunction(renderCheckboxValues)) {\n      return renderCheckboxValues(row);\n    }\n    return '';\n  };\n\n  const handleCheckAllRows = useCallback(() => {\n    let newCheckedValues: string[] = [];\n    if (!isPageAllChecked) {\n      newCheckedValues = concat(checkedValues, currentPageYetCheckedValues);\n    } else {\n      newCheckedValues = difference(checkedValues, currentPageCheckboxValues);\n    }\n    setCheckedValues(newCheckedValues);\n    if (isFunction(onCheckedValuesChange)) onCheckedValuesChange(newCheckedValues);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [checkedValues, currentPageYetCheckedValues, isPageAllChecked, currentPageCheckboxValues]);\n\n  const handleCheckRow = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (item: any, row: TableRow<any>) => (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const value = event.currentTarget.value;\n      const newCheckedValues = produce(checkedValues, (draftState: string[]): string[] => {\n        if (includes(draftState, value)) {\n          return pull(draftState, value);\n        } else {\n          return concat(draftState, value);\n        }\n      });\n      if (isFunction(onRowCheck)) onRowCheck(value, item, row);\n      if (isFunction(onCheckedValuesChange)) onCheckedValuesChange(newCheckedValues);\n      setCheckedValues(newCheckedValues);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [checkedValues, data],\n  );\n\n  const handleClickRow = useCallback(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (rowOriginal: any, row: TableRow<any>) => (): void => {\n      onRowClick && onRowClick(rowOriginal);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data],\n  );\n\n  const renderCheckAll = (): JSX.Element => (\n    <th>\n      {showCheckAll && (\n        <Label check>\n          <Input checked={isPageAllChecked && !!size(data)} type=\"checkbox\" onChange={handleCheckAllRows} />\n        </Label>\n      )}\n    </th>\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const renderCheckRow = (row: TableRow<any>): JSX.Element => {\n    const value = getCheckboxValue(row);\n    return (\n      <td>\n        <Label check>\n          <Input\n            checked={includes(checkedValues, value)}\n            onChange={handleCheckRow(get(row, 'original'), row)}\n            type=\"checkbox\"\n            value={value}\n          />\n        </Label>\n      </td>\n    );\n  };\n\n  // Render the UI for your table\n  return (\n    <>\n      <Table striped hover {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup, index) => (\n            <tr key={index}>\n              {showCheckboxes && renderCheckAll()}\n              {headerGroup.headers.map((column, index) => (\n                <th {...column.getHeaderProps()} key={index}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {rows.map((row, index) => {\n            return (\n              prepareRow(row) , (\n                <tr className=\"cursor-pointer\" {...row.getRowProps()} key={index}>\n                  {showCheckboxes && renderCheckRow(row)}\n                  {row.cells.map((cell, index) => {\n                    return (\n                      <td onClick={handleClickRow(get(row, 'original'), row)} {...cell.getCellProps()} key={index}>\n                        {cell.value !== null ? cell.render('Cell') : ''}\n                      </td>\n                    );\n                  })}\n                </tr>\n              )\n            );\n          })}\n        </tbody>\n      </Table>\n      {isEmpty(rows) && <NoData />}\n    </>\n  );\n};\n\nDataTable.defaultProps = {\n  onRowClick: noop,\n  showCheckAll: true,\n  showCheckboxes: false,\n};\n\nexport default DataTable;\n","/* eslint-disable max-lines */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Row, Fade } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, match, Link } from 'react-router-dom';\n// import { Cell } from 'react-table';\nimport { push } from 'connected-react-router';\nimport { get, size} from 'lodash';\n\nimport DataTable from '../../components/DataTable';\n// import { numberFormat } from '../../utils/common';\nimport { getAllReport } from '../../redux/BaoCaoLamViec/action';\n// import parse_query_string from '../../utils/parse_query_string';\nimport routesMap from '../../utils/routesMap';\n// eslint-disable-next-line import/imports-first\n\ninterface Props {\n  match: match;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst BaoCaoLamViec: React.FC<Props> = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState<any>([]);\n  const idDonHang = get(props, 'match.params.idDonHang');\n  useEffect(() => {  \n    dispatch(\n      getAllReport({},\n        (data: any) => {\n          setData(data)\n        },\n        () => {}\n      )\n    )\n  }, []);\n\n  const handleRedirectDetail = (item: any): void => {\n    dispatch(\n      push(\n        generatePath(routesMap.THONG_TIN_BAO_CAO, {\n          idBaoCao: item.id,\n        }),\n      ),\n    );\n  };\n\n  const columns = useMemo(\n    // eslint-disable-next-line max-lines-per-function\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Tiêu đề',\n        accessor: 'title',\n      },\n      {\n        Header: 'Họ tên',\n        accessor: 'fullName',\n      },\n      {\n        Header: 'Quản trị',\n        accessor: '',\n        Cell: ({ row }: any): JSX.Element => (\n          <Link\n            className=\"SipTableFunctionIcon\"\n            to={`/in-don-hang/${idDonHang}?idChuyenThu=${get(row, 'values.PACKAGE_ID', '')}`}\n            target=\"_blank\"\n          >\n            <img title=\"In\" src={'../../assets/img/icon/iconPrint.svg'} alt=\"VTPostek\" />\n          </Link>\n        ),\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  function renderTable(): JSX.Element {\n    return (\n      <Row className=\"sipTableContainer sipTableRowClickable\">\n        <DataTable columns={columns} data={data} onRowClick={handleRedirectDetail} />\n      </Row>\n    );\n  }\n  return size(data) > 0 ? (\n    <>\n      <Row className=\"mb-3 sipTitleContainer\">\n        <h1 className=\"sipTitle\">{'Thông tin đơn hàng'}</h1>\n        {/* <RootTypeahead\n          id=\"location\"\n          //  labelKey={labelKeyLocation}\n          options={listLocation}\n          placeholder=\"Chọn đơn vị\"\n        // onInputChange={setKeywords}\n        //  onChange={handleSelectedLocation}\n        //  selected={selectedLocation}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '10px',\n            }}\n            className=\"fa fa-caret-down\"\n          />\n        </RootTypeahead> */}\n        <div className=\"sipTitleRightBlock\">\n          <Button className=\"ml-2\" color=\"primary\" >\n          <i className=\"fa fa-pencil mr-2\" />\n            {'Thêm mới'}\n          </Button>\n          {/* <Button className=\"ml-2\" color=\"primary\" >\n            <i className=\"fa fa-pencil mr-2\" />\n            {'Sửa'}\n          </Button> */}\n          {/* <Button className=\"ml-2\" color=\"primary\">\n            <img src={'../../assets/img/icon/iconInBuuGui.svg'} alt=\"VTPostek\" />\n            {'In bưu gửi'}\n          </Button> */}\n        </div>\n      </Row>\n      <h1 className=\"sipTitle\">{'Danh sách phiếu gửi'}</h1>\n      {renderTable()}\n    </>\n  ) : (\n    <Fade in={true} timeout={1000}>\n      <Row className=\"mb-3 sipTitleContainer\">\n        {/* <h1 className=\"sipTitle\">\n          <ButtonGoBack />\n          {t('Quay lại')}\n        </h1> */}\n      </Row>\n      <div className=\"row mb-5\" />\n      <h3 className=\"text-center\">{'Không tìm thấy thông tin phiếu gửi!'}</h3>\n    </Fade>\n  );\n};\n\nexport default BaoCaoLamViec;\n"],"sourceRoot":""}