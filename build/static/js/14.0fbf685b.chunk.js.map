{"version":3,"sources":["components/Modal/ModalTaoMoiChiTietBaoCao.tsx","containers/BaoCaoLamViec/DetailBaoCao.tsx"],"names":["ModalTaoMoiChiTietBaoCao","props","t","useTranslation","dispatch","useDispatch","onHide","onSuccessCreated","visible","modalTitle","idReport","item","useState","title","setTitle","content","setContent","hospital","setHospital","doctor","setDoctor","location","setLocation","note","setNote","handleChangeTextboxValue","setValueFunction","event","currentTarget","value","useEffect","get","Modal","isOpen","className","ModalHeader","toggle","ModalBody","FormGroup","Label","style","color","Input","onChange","type","placeholder","ModalFooter","Button","onClick","e","preventDefault","undefined","payloadCreate","toNumber","updateDetailReport","id","toast","createDetailReport","BaoCaoLamViec","params","qs","parse","pageNumberUrl","pageitemsUrl","data","setData","totalPage","setTotalPage","pageNumber","setPageNumber","pageSize","setPageSize","showModalTaoMoi","setShowModalTaoMoi","currentRow","setCurrentRow","idBaoCao","getDetailReport","list","length","total_pages","toggleModalTaoMoi","handleEditClick","row","columns","useMemo","Header","accessor","Cell","moment","format","Row","ButtonGoBack","DataTable","onRowClick","Pagination","pageRangeDisplayed","marginPagesDisplayed","pageCount","onThisPaginationChange","selectedItem","selected","url","replaceUrlParam","window","pathname","search","replace","generatePath","pushSearchConditionToUrl"],"mappings":"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","file":"static/js/14.0fbf685b.chunk.js","sourcesContent":["import React, { FormEvent, useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalFooter, ModalBody, FormGroup, Label, Input } from 'reactstrap';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { createDetailReport,updateDetailReport } from '../../redux/BaoCaoLamViec/action';\nimport { get, toNumber } from 'lodash';\n\ninterface Props {\n  onHide: () => void;\n  onSuccessCreated: () => void;\n  visible: boolean;\n  modalTitle: string;\n  idReport: string;\n  item?: any\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst ModalTaoMoiChiTietBaoCao: React.FC<Props> = (props: Props): JSX.Element => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { onHide, onSuccessCreated, visible, modalTitle, idReport, item } = props;\n\n  const [title, setTitle] = useState<string>('');\n  const [content, setContent] = useState<string>('');\n  const [hospital, setHospital] = useState<string>('');\n  const [doctor, setDoctor] = useState<string>('');\n  const [location, setLocation] = useState<string>('');\n  const [note, setNote] = useState<string>('');\n  // const [user, setUser] = useState<any>([]);\n  // const [listUser, setListUser] = useState<any>([]);\n  // const [query, setQuery] = useState<string>('');\n\n  useEffect((): void => {\n    setTitle(get(item, 'original.title',''));\n    setContent(get(item, 'original.content', ''));\n    setHospital(get(item, 'original.hospital', ''));\n    setDoctor(get(item, 'original.doctor', ''));\n    setLocation(get(item, 'original.location', ''));\n    setNote(get(item, 'original.note', ''));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [item]);\n\n  function handleCreate(e: FormEvent): void {\n    e.preventDefault();\n    if(title === '' || title === undefined || content === '' || content === undefined || location === '' || location === undefined){\n        toast(\n            <>\n            <i className=\"fa fa-window-close mr-2\" />\n            {t('Chưa nhập tiêu đề, nội dung hoặc vị trí ')}\n            </>,\n            {\n            type: 'error',\n            },\n        );\n        return\n    }\n    const payloadCreate = {\n      title: title,\n      content: content,\n      hospital: hospital,\n      doctor: doctor,\n      location: location,\n      note: note,\n      idReport: toNumber(idReport)\n    };\n    if( !get(item, 'original.id')){\n        dispatch(\n            createDetailReport(payloadCreate,\n                (): void => {\n                    onSuccessCreated();\n                    // const thisId = get(data, 'MT_ZTMI016_OUT.IV_TOR_ID_CU', '');\n                    toast(\n                        <>\n                            <i className=\"fa fa-check-square mr-2\" />\n                            {t('Tạo báo cáo')} {t('thành công')}\n                        </>,\n                        {\n                            type: 'success',\n                        },\n                    );\n                    // alert(`Tạo thành công! Mã: ${thisId}`);\n                },\n                (): void => {\n                    toast(\n                        <>\n                            <i className=\"fa fa-window-close mr-2\" />\n                            {t('Đã có lỗi xảy ra ')}\n                        </>,\n                        {\n                            type: 'error',\n                        },\n                    );\n                    // alert(t('Có lỗi xảy ra!'));\n                },\n            ),\n        );\n    }else{\n        dispatch(\n            updateDetailReport({...payloadCreate,id:  get(item, 'original.id')},\n                ():void=>{\n                    onSuccessCreated();\n                    // const thisId = get(data, 'MT_ZTMI016_OUT.IV_TOR_ID_CU', '');\n                    toast(\n                        <>\n                            <i className=\"fa fa-check-square mr-2\" />\n                            {t('Tạo báo cáo')} {t('thành công')}\n                        </>,\n                        {\n                            type: 'success',\n                        },\n                    );\n                },\n                ():void=>{\n                    toast(\n                        <>\n                            <i className=\"fa fa-window-close mr-2\" />\n                            {t('Đã có lỗi xảy ra ')}\n                        </>,\n                        {\n                            type: 'error',\n                        },\n                    );\n                })\n        )\n    }\n  }\n\n  function handleChangeTextboxValue(setValueFunction: Function): (event: React.FormEvent<HTMLInputElement>) => void {\n    return (event: React.FormEvent<HTMLInputElement>): void => {\n      setValueFunction(event.currentTarget.value);\n    };\n  }\n\n  // function handleChangeTypeaheadInput(setValueFunction: Function) {\n  //   return (input: string): void => {\n  //     setValueFunction(input);\n  //   };\n  // }\n\n  // function handleChooseUser(items: TypeaheadOption[]): void {\n  //   setUser(items[0])\n  // }\n\n  return (\n    <Modal isOpen={visible} className=\"sipTitleModalCreateNew\">\n      <ModalHeader toggle={onHide}>{modalTitle}</ModalHeader>\n      <ModalBody>\n        <FormGroup>\n            <Label>{t('Nhập tiêu đề')} <b style={{color: \"red\"}}>*</b></Label>\n            <Input\n            value={title}\n            onChange={handleChangeTextboxValue(setTitle)}\n            type=\"textarea\"\n            placeholder={t('Nhập tiêu đề')}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>{t('Nhập nội dung')} <b style={{color: \"red\"}}>*</b></Label>\n          <Input\n            value={content}\n            onChange={handleChangeTextboxValue(setContent)}\n            type=\"textarea\"\n            placeholder={t('Nhập nội dung')}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>{t('Nhập bệnh viện')}</Label>\n          <Input\n            value={hospital}\n            onChange={handleChangeTextboxValue(setHospital)}\n            type=\"textarea\"\n            placeholder={t('Nhập bệnh viện')}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>{t('Nhập bác sĩ')}</Label>\n          <Input\n            value={doctor}\n            onChange={handleChangeTextboxValue(setDoctor)}\n            type=\"textarea\"\n            placeholder={t('Nhập bác sĩ')}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>{t('Nhập vị trí')} <b style={{color: \"red\"}}>*</b></Label>\n          <Input\n            value={location}\n            onChange={handleChangeTextboxValue(setLocation)}\n            type=\"textarea\"\n            placeholder={t('Nhập vị trí')}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>{t('Nhập ghi chú')}</Label>\n          <Input\n            value={note}\n            onChange={handleChangeTextboxValue(setNote)}\n            type=\"textarea\"\n            placeholder={t('Nhập ghi chú')}\n          />\n        </FormGroup>\n      </ModalBody>\n      <ModalFooter className=\"justify-content-end\">\n        <Button color=\"primary\" onClick={handleCreate}>\n          {t('Ghi lại')}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ModalTaoMoiChiTietBaoCao;\n","/* eslint-disable max-lines */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Row, Button } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { match, generatePath } from 'react-router-dom';\nimport { get, toNumber } from 'lodash';\nimport qs from 'query-string';\nimport moment from 'moment';\nimport DataTable from '../../components/DataTable';\nimport {  getDetailReport } from '../../redux/BaoCaoLamViec/action';\nimport ButtonGoBack from '../../components/Button/ButtonGoBack';\nimport replaceUrlParam from '../../utils/replaceUrlParam';\nimport { replace } from 'connected-react-router';\nimport Pagination from '../../components/Pagination';\nimport ModalTaoMoiChiTietBaoCao from '../../components/Modal/ModalTaoMoiChiTietBaoCao';\n// eslint-disable-next-line import/imports-first\n\ninterface Props {\n  match: match;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst BaoCaoLamViec: React.FC<Props> = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const params = qs.parse(get(props, 'location.search'));\n  const pageNumberUrl = get(params,\"pageNumber\");\n  const pageitemsUrl = get(params,\"pageitems\");\n  const [data, setData] = useState<any>([]);\n  const [totalPage, setTotalPage] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(pageNumberUrl ? toNumber(pageNumberUrl) : 1);\n  const [pageSize, setPageSize] = useState<number>(pageitemsUrl ? toNumber(pageitemsUrl) : 20);\n  const [showModalTaoMoi, setShowModalTaoMoi] = useState<boolean>(false);\n  const [currentRow, setCurrentRow] = useState<any>({});\n  const idBaoCao = get(props, 'match.params.idBaoCao');\n  useEffect(() => {  \n    dispatch(\n        getDetailReport({idBaoCao: idBaoCao,pageNumber: pageNumber,pageSize: pageSize},\n        (data: any) => {\n          if(data.list.length >= 0){\n            setData(data.list)\n            setTotalPage(toNumber(data.total_pages))\n          }\n        },\n        () => {}\n      )\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageNumber,pageSize]);\n\n  const pushSearchConditionToUrl = (pageNumber: number): void => {\n    const url = replaceUrlParam(window.location.pathname + window.location.search, {\n      pageNumber: pageNumber,\n    });\n    dispatch(replace(generatePath(url)));\n  };\n\n  const onPaginationChange = (selectedItem: { selected: number }): void => {\n    setPageNumber(selectedItem.selected+1)\n    pushSearchConditionToUrl(selectedItem.selected+1);\n  };\n\n  const toggleModalTaoMoi = (): void => {\n    setShowModalTaoMoi(!showModalTaoMoi);\n  };\n\n  function handleEditClick(\n    row: any,\n  ): (event: React.MouseEvent) => void {\n    return (): void => {\n      setCurrentRow(row)\n      toggleModalTaoMoi()\n    };\n  }\n\n  const getListBaoCao = (): void => {\n    dispatch(\n      getDetailReport({idBaoCao: idBaoCao,pageNumber: pageNumber,pageSize: pageSize},\n      (data: any) => {\n        if(data.list.length >= 0){\n          setData(data.list)\n          setTotalPage(toNumber(data.total_pages))\n        }\n      },\n      () => {}\n    )\n  )\n    toggleModalTaoMoi()\n  };\n\n  const columns = useMemo(\n    // eslint-disable-next-line max-lines-per-function\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Nội dung',\n        accessor: 'content',\n      },\n      {\n        Header: 'Thời gian khởi tạo',\n        accessor: 'createdAt',\n        Cell: ({ row }: any): JSX.Element => (\n            <>{moment(get(row,'values.createdAt','')).format('DD/MM/YYYY HH:mm:ss')}</>\n        ),\n      },\n      {\n        Header: 'Bệnh viện',\n        accessor: 'hospital',\n      },\n      {\n        Header: 'Bác sĩ',\n        accessor: 'doctor',\n      },\n      {\n        Header: 'Vị trí',\n        accessor: 'location',\n        Cell: ({ row }: any): JSX.Element => (\n            <div>{get(row,'values.location','')}</div>\n        ),\n      },\n      {\n        Header: 'Ghi chú',\n        accessor: 'note',\n      },\n      {\n        Header: 'Quản trị',\n        accessor: '',\n        Cell: ({ row }: any): JSX.Element => (\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={handleEditClick(row)}\n          >\n            <i className=\"fa fa-pencil mr-2\" />\n              {'Sửa'}\n          </Button>\n        ),\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  function renderTable(): JSX.Element {\n    return (\n      <Row className=\"sipTableContainer sipTableRowClickable\">\n        <DataTable columns={columns} data={data} onRowClick={() => {}} />\n      </Row>\n    );\n  }\n  return (\n    <>\n      <Row className=\"mb-3 sipTitleContainer\">\n        <h1 className=\"sipTitle\">\n            <ButtonGoBack />\n            {'Thông tin chi tiết'}\n        </h1>\n        {/* <RootTypeahead\n          id=\"location\"\n          //  labelKey={labelKeyLocation}\n          options={listLocation}\n          placeholder=\"Chọn đơn vị\"\n        // onInputChange={setKeywords}\n        //  onChange={handleSelectedLocation}\n        //  selected={selectedLocation}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '10px',\n            }}\n            className=\"fa fa-caret-down\"\n          />\n        </RootTypeahead> */}\n        <div className=\"sipTitleRightBlock\">\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={toggleModalTaoMoi}\n          >\n          <i className=\"fa fa-pencil mr-2\" />\n            {'Thêm mới'}\n          </Button>\n          {/* <Button className=\"ml-2\" color=\"primary\" >\n            <i className=\"fa fa-pencil mr-2\" />\n            {'Sửa phiếu gửi'}\n          </Button> */}\n          {/* <Button className=\"ml-2\" color=\"primary\">\n            <img src={'../../assets/img/icon/iconInBuuGui.svg'} alt=\"VTPostek\" />\n            {'In bưu gửi'}\n          </Button> */}\n        </div>\n      </Row>\n      <h1 className=\"sipTitle\">{'Danh sách báo cáo hàng ngày '}</h1>\n      {renderTable()}\n      <Pagination\n        pageRangeDisplayed={2}\n        marginPagesDisplayed={2}\n        pageCount={totalPage}\n        onThisPaginationChange={onPaginationChange}\n        setPageSize={setPageSize}\n      />\n      <ModalTaoMoiChiTietBaoCao \n        visible={showModalTaoMoi}\n        onSuccessCreated={getListBaoCao}\n        onHide={toggleModalTaoMoi}\n        modalTitle={'Tạo báo cáo'}\n        idReport={idBaoCao}\n        item={currentRow}\n      />\n    </>\n  // ) : (\n  //   <Fade in={true} timeout={1000}>\n  //     <Row className=\"mb-3 sipTitleContainer\">\n  //       <h1 className=\"sipTitle\">\n  //         <ButtonGoBack />\n  //         {'Quay lại'}\n  //       </h1>\n  //     </Row>\n  //     <div className=\"row mb-5\" />\n  //     <h3 className=\"text-center\">{'Không tìm thấy thông tin phiếu gửi!'}</h3>\n  //   </Fade>\n  );\n};\n\nexport default BaoCaoLamViec;\n"],"sourceRoot":""}