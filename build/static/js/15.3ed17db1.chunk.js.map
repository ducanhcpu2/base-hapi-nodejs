{"version":3,"sources":["containers/User/index.tsx"],"names":["UserScreen","props","dispatch","useDispatch","params","qs","parse","get","pageNumberUrl","pageitemsUrl","useState","data","setData","totalPage","setTotalPage","toNumber","pageNumber","setPageNumber","pageSize","setPageSize","useEffect","getAllUser","list","length","total_pages","handleRedirectDetail","handleEditClick","row","console","log","columns","useMemo","Header","accessor","Cell","moment","format","className","color","onClick","disableOnClickCellEnd","onRowClick","pageRangeDisplayed","marginPagesDisplayed","pageCount","onThisPaginationChange","selectedItem","selected","url","replaceUrlParam","window","location","pathname","search","replace","generatePath","pushSearchConditionToUrl"],"mappings":"mQAsNeA,UA9LqB,SAACC,GACnC,IAAMC,EAAWC,cAEXC,EAASC,IAAGC,MAAMC,cAAIN,EAAO,oBAC7BO,EAAgBD,cAAIH,EAAO,cAC3BK,EAAeF,cAAIH,EAAO,aALiC,EAMzCM,mBAAc,IAN2B,mBAM1DC,EAN0D,KAMpDC,EANoD,OAO/BF,mBAAiB,GAPc,mBAO1DG,EAP0D,KAO/CC,EAP+C,OAQ7BJ,mBAAiBF,EAAgBO,mBAASP,GAAiB,GAR9B,mBAQ1DQ,EAR0D,KAQ9CC,EAR8C,OASjCP,mBAAiBD,EAAeM,mBAASN,GAAgB,IATxB,mBAS1DS,EAT0D,KAShDC,EATgD,KAWjEC,qBAAU,WACRlB,EACEmB,YAAW,CACTL,WAAYA,EACZE,SAAUA,IAEV,SAACP,GACIA,EAAKW,KAAKC,QAAU,IACrBX,EAAQD,EAAKW,MACbR,EAAaC,mBAASJ,EAAKa,kBAG/B,kBAIH,CAACR,EAAWE,IAEf,IAOMO,EAAuB,aAU7B,SAASC,EACPC,GAEA,OAAO,WACLC,QAAQC,IAAI,QAAQF,IAIxB,IAKMG,EAAUC,mBAEd,iBAAM,CACJ,CACEC,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,iBACRC,SAAU,YAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,oCACRC,SAAU,eAEZ,CACED,OAAQ,oBACRC,SAAU,SACVC,KAAM,gBAAGP,EAAH,EAAGA,IAAH,OACJ,6BACqC,IAAhCpB,cAAIoB,EAAI,gBAAgB,IAAY,MAAQ,aAIrD,CACEK,OAAQ,sBACRC,SAAU,YAEZ,CACED,OAAQ,mBACRC,SAAU,YACVC,KAAM,gBAAGP,EAAH,EAAGA,IAAH,OACJ,oCAAGQ,IAAO5B,cAAIoB,EAAI,mBAAmB,KAAKS,OAAO,uBAGrD,CACEJ,OAAQ,6BACRC,SAAU,YACVC,KAAM,gBAAGP,EAAH,EAAGA,IAAH,OACJ,oCAAGQ,IAAO5B,cAAIoB,EAAI,mBAAmB,KAAKS,OAAO,uBAGrD,CACEJ,OAAQ,qBACRC,SAAU,GACVC,KAAM,gBAAGP,EAAH,EAAGA,IAAH,OACJ,kBAAC,IAAD,CAAQU,UAAU,OAAOC,MAAM,UAC7BC,QAASb,EAAgBC,IAEzB,uBAAGU,UAAU,sBACV,iBAMX,IAUF,OACE,oCACE,kBAAC,IAAD,CAAKA,UAAU,0BACb,wBAAIA,UAAU,YAAY,wCAmB1B,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CAAQA,UAAU,OAAOC,MAAM,WAC/B,uBAAGD,UAAU,sBACV,sBAYP,wBAAIA,UAAU,YAAY,wCA1C1B,kBAAC,IAAD,CAAKA,UAAU,0CACb,kBAAC,IAAD,CAAWG,uBAAuB,EAAMV,QAASA,EAASnB,KAAMA,EAAM8B,WAAYhB,KA2CpF,kBAAC,IAAD,CACEiB,mBAAoB,EACpBC,qBAAsB,EACtBC,UAAW/B,EACXgC,uBAtHqB,SAACC,GAC1B7B,EAAc6B,EAAaC,SAAS,GA1BL,SAAC/B,GAChC,IAAMgC,EAAMC,YAAgBC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,OAAQ,CAC7ErC,WAAYA,IAEdd,EAASoD,YAAQC,YAAaP,KAuB9BQ,CAAyBV,EAAaC,SAAS,IAqH3C5B,YAAaA","file":"static/js/15.3ed17db1.chunk.js","sourcesContent":["/* eslint-disable max-lines */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Button, Row } from 'reactstrap';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, match } from 'react-router-dom';\n// import { Cell } from 'react-table';\nimport { replace } from 'connected-react-router';\nimport { get, toNumber} from 'lodash';\nimport qs from 'query-string';\n\nimport DataTable from '../../components/DataTable';\n// import { numberFormat } from '../../utils/common';\n// import parse_query_string from '../../utils/parse_query_string';\nimport Pagination from '../../components/Pagination';\nimport replaceUrlParam from '../../utils/replaceUrlParam';\nimport { getAllUser } from '../../redux/User/action';\nimport moment from 'moment';\n// eslint-disable-next-line import/imports-first\n\ninterface Props {\n  match: match;\n}\n\n// eslint-disable-next-line max-lines-per-function\nconst UserScreen: React.FC<Props> = (props: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  // const totalPage = 3;\n  const params = qs.parse(get(props, 'location.search'));\n  const pageNumberUrl = get(params,\"pageNumber\");\n  const pageitemsUrl = get(params,\"pageitems\");\n  const [data, setData] = useState<any>([]);\n  const [totalPage, setTotalPage] = useState<number>(0);\n  const [pageNumber, setPageNumber] = useState<number>(pageNumberUrl ? toNumber(pageNumberUrl) : 1);\n  const [pageSize, setPageSize] = useState<number>(pageitemsUrl ? toNumber(pageitemsUrl) : 20);\n  // const idDonHang = get(props, 'match.params.idDonHang');\n  useEffect(() => {  \n    dispatch(\n      getAllUser({\n        pageNumber: pageNumber,\n        pageSize: pageSize\n      },\n        (data: any) => {\n          if(data.list.length >= 0){\n            setData(data.list)\n            setTotalPage(toNumber(data.total_pages))\n          }\n        },\n        () => {}\n      )\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pageNumber,pageSize]);\n\n  const pushSearchConditionToUrl = (pageNumber: number): void => {\n    const url = replaceUrlParam(window.location.pathname + window.location.search, {\n      pageNumber: pageNumber,\n    });\n    dispatch(replace(generatePath(url)));\n  };\n\n  const handleRedirectDetail = (): void => {\n    // dispatch(\n    //   push(\n    //     generatePath(routesMap.THONG_TIN_BAO_CAO, {\n    //       idBaoCao: item.id,\n    //     }),\n    //   ),\n    // );\n  };\n\n  function handleEditClick(\n    row: any,\n  ): (event: React.MouseEvent) => void {\n    return (): void => {\n      console.log(\"row: \",row);\n    };\n  }\n\n  const onPaginationChange = (selectedItem: { selected: number }): void => {\n    setPageNumber(selectedItem.selected+1)\n    pushSearchConditionToUrl(selectedItem.selected+1);\n  };\n\n  const columns = useMemo(\n    // eslint-disable-next-line max-lines-per-function\n    () => [\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Họ tên',\n        accessor: 'fullName',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n      {\n        Header: 'Số điện thoại',\n        accessor: 'phoneNumber',\n      },\n      {\n        Header: 'Giới tính',\n        accessor: 'gender',\n        Cell: ({ row }: any): JSX.Element => (\n          <div>\n              {get(row,'values.gender','') === 1 ? 'Nam' : 'Nữ' }\n          </div>\n        ),\n      },\n      {\n        Header: 'Quyền hạn',\n        accessor: 'roleName',\n      },\n      {\n        Header: 'Ngày tạo',\n        accessor: 'createdAt',\n        Cell: ({ row }: any): JSX.Element => (\n          <>{moment(get(row,'values.createdAt','')).format('hh:mm DD/MM/YYYY')}</>\n        ),\n      },\n      {\n        Header: 'Ngày cập nhật',\n        accessor: 'updatedAt',\n        Cell: ({ row }: any): JSX.Element => (\n          <>{moment(get(row,'values.updatedAt','')).format('hh:mm DD/MM/YYYY')}</>\n        ),\n      },\n      {\n        Header: 'Quản trị',\n        accessor: '',\n        Cell: ({ row }: any): JSX.Element => (\n          <Button className=\"ml-2\" color=\"primary\" \n            onClick={handleEditClick(row)}\n          >\n            <i className=\"fa fa-pencil mr-2\" />\n              {'Sửa'}\n          </Button>\n        ),\n      },\n    ],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  function renderTable(): JSX.Element {\n    return (\n      <Row className=\"sipTableContainer sipTableRowClickable\">\n        <DataTable disableOnClickCellEnd={true} columns={columns} data={data} onRowClick={handleRedirectDetail} />\n      </Row>\n    );\n  }\n  return (\n    <>\n      <Row className=\"mb-3 sipTitleContainer\">\n        <h1 className=\"sipTitle\">{'Thông tin người dùng'}</h1>\n        {/* <RootTypeahead\n          id=\"location\"\n          //  labelKey={labelKeyLocation}\n          options={listLocation}\n          placeholder=\"Chọn đơn vị\"\n        // onInputChange={setKeywords}\n        //  onChange={handleSelectedLocation}\n        //  selected={selectedLocation}\n        >\n          <span\n            style={{\n              position: 'absolute',\n              right: '8px',\n              top: '10px',\n            }}\n            className=\"fa fa-caret-down\"\n          />\n        </RootTypeahead> */}\n        <div className=\"sipTitleRightBlock\">\n          <Button className=\"ml-2\" color=\"primary\" >\n          <i className=\"fa fa-pencil mr-2\" />\n            {'Thêm mới'}\n          </Button>\n          {/* <Button className=\"ml-2\" color=\"primary\" >\n            <i className=\"fa fa-pencil mr-2\" />\n            {'Sửa'}\n          </Button> */}\n          {/* <Button className=\"ml-2\" color=\"primary\">\n            <img src={'../../assets/img/icon/iconInBuuGui.svg'} alt=\"VTPostek\" />\n            {'In bưu gửi'}\n          </Button> */}\n        </div>\n      </Row>\n      <h1 className=\"sipTitle\">{'Danh sách người dùng'}</h1>\n      {renderTable()}\n      <Pagination\n        pageRangeDisplayed={2}\n        marginPagesDisplayed={2}\n        pageCount={totalPage}\n        onThisPaginationChange={onPaginationChange}\n        setPageSize={setPageSize}\n      />\n    </>\n  // ) : (\n  //   <Fade in={true} timeout={1000}>\n  //     <Row className=\"mb-3 sipTitleContainer\">\n  //       {/* <h1 className=\"sipTitle\">\n  //         <ButtonGoBack />\n  //         {t('Quay lại')}\n  //       </h1> */}\n  //     </Row>\n  //     <div className=\"row mb-5\" />\n  //     <h3 className=\"text-center\">{'Không tìm thấy thông tin phiếu gửi!'}</h3>\n  //   </Fade>\n  );\n};\n\nexport default UserScreen;\n"],"sourceRoot":""}